{"version":3,"sources":["components/LoginForm.js","data.js","components/flowers.js","components/data.js","components/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","email","password","details","setDetails","Form","onSubmit","e","preventDefault","className","Group","controlId","Label","Control","type","placeholder","onChange","target","value","Button","variant","flowers","name","picture","quizzes","questionIndex","questions","choiceIndex","i","length","question","choices","answer","push","generateQuestions","quiz","generateQuizzes","score","result","resultColor","Homepage","currentQuiz","setCurrentQuiz","currentQuestion","setCurrentQuestion","navQuizBtnHandler","Container","map","flower","Figure","onClick","Image","src","alt","Caption","Card","Body","id","Row","Col","choice","htmlFor","checked","style","color","App","adminUser","user","setUser","setError","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA+BeA,MA5Bf,YACC,IADmBC,EACpB,EADoBA,MAAMC,EAC1B,EAD0BA,MAC1B,EACiCC,mBAAS,CAACC,MAAM,GAAGC,SAAS,KAD7D,mBACWC,EADX,KACoBC,EADpB,KAOI,OACI,eAACC,EAAA,EAAD,CAAMC,SANU,SAAAC,GAChBA,EAAEC,iBACFV,EAAMK,IAIyBM,UAAU,aAAzC,UACI,oBAAIA,UAAU,gBAAd,wBACU,KAARV,EAAc,qBAAKU,UAAU,QAAf,SAAwBV,IAAgB,GACxD,eAACM,EAAA,EAAKK,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACN,EAAA,EAAKO,MAAN,4BACA,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,SAAU,SAAAT,GAAC,OAAGH,EAAW,2BAAID,GAAL,IAAcF,MAAOM,EAAEU,OAAOC,UAASA,MAAOf,EAAQF,WAGvI,eAACI,EAAA,EAAKK,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACN,EAAA,EAAKO,MAAN,uBACA,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,SAAU,SAAAT,GAAC,OAAGH,EAAW,2BAAID,GAAL,IAAcD,SAAUK,EAAEU,OAAOC,UAASA,MAAOf,EAAQD,cAE1I,cAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUX,UAAU,YAAYK,KAAK,SAArD,wBCuFGO,EA/GD,CACV,CACIC,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,iBACNC,QAAS,oEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,OACNC,QAAS,2DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,8D,wCCIFF,EA/GD,CACV,CACIC,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,iBACNC,QAAS,oEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,OACNC,QAAS,2DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,8DC9DFC,EAzBO,WAIlB,IAHA,IAAIA,EAAU,GACVC,EAAgB,EAChBC,EArBgB,WAGpB,IAFA,IAAIA,EAAY,GACZC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","file":"static/js/main.f5971db0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction LoginForm({Login,error})\r\n{\r\n    const [details, setDetails]= useState({email:\"\",password:\"\"});\r\n    const submitHandler=e=>{\r\n        e.preventDefault();\r\n        Login(details);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"login-form\">\r\n            <h2 className=\"login-heading\">Login Form</h2>\r\n            {(error!==\"\")?( <div className=\"error\">{error}</div> ):(\"\")}\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e=> setDetails({...details, email: e.target.value})} value={details.email}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={e=> setDetails({...details, password: e.target.value})} value={details.password} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" className=\"btn-block\" type=\"submit\">\r\n                Submit\r\n        </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","import flowers from './flowers';\r\n\r\nlet generateQuestions = () => {\r\n    let questions = [];\r\n    let choiceIndex = 0;\r\n    for(let i = 0; i < flowers.length; i++) {\r\n        choiceIndex = i;\r\n        if(choiceIndex > (flowers.length - 4)){\r\n           choiceIndex = i - 2;\r\n        }\r\n        let question = {\r\n            picture: flowers[i].picture,\r\n            choices: [flowers[choiceIndex].name, flowers[choiceIndex+1].name, flowers[choiceIndex+2].name],\r\n            answer: flowers[i].name\r\n        };\r\n        questions.push(question);\r\n    }\r\n    return questions;\r\n};\r\n\r\nlet generateQuizzes = () => {\r\n    let quizzes = []; \r\n    let questionIndex = 0;\r\n    let questions = generateQuestions();\r\n    for(let i = 0; i < questions.length; i++){\r\n        questionIndex = i;\r\n        if(questionIndex > (questions.length - 7)) {\r\n            questionIndex = i - 5;\r\n        }\r\n        let quiz = [\r\n            questions[questionIndex], \r\n            questions[questionIndex+1], \r\n            questions[questionIndex+2], \r\n            questions[questionIndex+3], \r\n            questions[questionIndex+4],\r\n            questions[questionIndex+5]\r\n        ];\r\n        quizzes.push(quiz);\r\n    }\r\n    return quizzes;\r\n};\r\n\r\nlet quizzes = generateQuizzes();\r\n\r\n\r\nexport default quizzes;","import '../App.css';\r\nimport React, { useState } from 'react';\r\nimport flowers from \"../data.js\";\r\nimport { Container, Figure, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport quizzes from './data';\r\n\r\nvar score = 0;\r\nvar result='';\r\nvar resultColor='';\r\nfunction Homepage() {\r\n\r\n    const [currentQuiz, setCurrentQuiz] = useState(-1);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const imageClickHandler = (e) => {\r\n        setCurrentQuiz(e);\r\n    }\r\n    const answerHandler = (e) => {\r\n        if (quizzes[currentQuiz][currentQuestion].answer === e) {\r\n            score += 1;\r\n            result = \"Correct\";\r\n            resultColor = 'lime';\r\n        }else{\r\n            result = \"InCorrect\";\r\n            resultColor = 'red';\r\n        }\r\n \r\n            \r\n            setCurrentQuestion(currentQuestion + 1);\r\n        \r\n    }\r\n    const navQuizBtnHandler = (e) => {\r\n        if (e === \"home\") {\r\n            setCurrentQuiz(-1);\r\n            setCurrentQuestion(0);\r\n            score = 0;\r\n        } else {\r\n            setCurrentQuestion(0);\r\n            score = 0;\r\n        }\r\n    }\r\n    return (\r\n        (currentQuiz === -1) ? (\r\n            <Container >\r\n                {flowers.map((flower, i) => (\r\n                    <Figure onClick={() => imageClickHandler(i)} key={i}>\r\n                        <Figure.Image src={flower.picture} alt=\"\" />\r\n                        <Figure.Caption >{flower.name}\r\n                        </Figure.Caption>\r\n                    </Figure>\r\n                ))}\r\n            </Container >\r\n        ) : (\r\n            (currentQuestion < 6) ? (<Container>\r\n                <Card className=\"rounded quiz-container\">\r\n                    <Card.Body>\r\n                        <h4 id=\"Qheading\">Select suitable name from the following options by looking at the flower image:</h4>\r\n                        <Row>\r\n                            <Col>\r\n                                <Figure>\r\n                                    <Figure.Image className=\"rounded\" src={quizzes[currentQuiz][currentQuestion].picture} alt=\"\" />\r\n                                </Figure>\r\n                            </Col>\r\n                            <Col>\r\n                                {quizzes[currentQuiz][currentQuestion].choices.map((choice, i) => (\r\n                                    <label htmlFor={i + \"option\"} className=\"optionLabel\" key={i}><input key={i} id={i + \"option\"} value={choice} checked={false} onChange={() => answerHandler(choice)} name=\"options\" className=\"mr-2\" type=\"radio\" />{choice}</label>\r\n                                ))}\r\n                                <div id=\"result\" style={{color:resultColor}}>{result}</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>) : (<Container className=\"quiz-score-container\">\r\n                <Card className=\"rounded quiz-container\">\r\n                    <Card.Body className=\"quiz-score-container\">\r\n                        <h2 className=\"Score\">\r\n                            Your Score is {score}/6\r\n                        </h2>\r\n                        <Row className=\"nav-quiz-btn-wrapper\">\r\n                            <Button className=\"nav-quiz-btn btn\" onClick={() => navQuizBtnHandler(\"home\")}>Go to Homepage</Button>\r\n                            <Button className=\"nav-quiz-btn btn\" onClick={() => navQuizBtnHandler(\"\")}>Retry</Button>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>)\r\n        )\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Homepage;","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport LoginForm from './components/LoginForm';\r\nimport Homepage from './components/Homepage';\r\n\r\n\r\nfunction App()\r\n{\r\n  const adminUser = {\r\n    email: \"admin@admin.com\",\r\n    password: \"admin123\"\r\n  }\r\n\r\n  const [user, setUser] = useState({ name: \"\", email: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Login = details =>\r\n  {\r\n    if (details.email === adminUser.email && details.password === adminUser.password)\r\n    {\r\n      console.log('Logged In!');\r\n      setUser({\r\n        email: details.name,\r\n        password: details.password\r\n      })\r\n    } else\r\n    {\r\n      console.log('Incorrect Credentials');\r\n      setError('Incorrect Credentials');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(user.email !== \"\") ? (\r\n        <Homepage />\r\n      ) : (\r\n        <LoginForm Login={Login} error={error} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}